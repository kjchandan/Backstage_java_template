name: Deploy EC2 Instance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VERSION: 1.5.0

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'harihar3/backstage-service-example'

    - uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      continue-on-error: true

  Code-linting:
    needs: gitleaks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'harihar3/backstage-service-example'

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '11'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.2

    - name: code linting
      run: |
        mvn validate || true
        mvn checkstyle:check || true
        mvn pmd:check || true

  terraform:
    needs: Code-linting
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: "ASIA3J5HVWH5NZNQ7CDM"
        aws-secret-access-key: "Vq7qsswos5+621OgUQNel4jPFg5+eI1Bo0XvVBs/"
        aws-region: 'us-east-1'
        aws-session-token: "IQoJb3JpZ2luX2VjEK3//////////wEaCXVzLWVhc3QtMSJGMEQCIBikYxMiXIfhdQ+hINhhw9Vho6rgXVAd+4G9stTrcqhbAiAgwMhVVWmYlIjrrXqtELwYdWv/aa/pwko4LOu28on9ayrHAwjm//////////8BEAAaDDc3NzIwMzg1NTg2NiIM8QCb6E6nGqNf3p5jKpsDnFREbkbdLpFlDlTpt8BO3b6Bq44endoAO+f0ViHk4uyGLQZ25WFUTY7WRQ8D6hFArLWDQsxbmarFlF8o8uLh8Y80yLFsaNjKSyHPB5w3ujK3aoNziJxhKo2jcbksd3yL4xrD3asfpcPuVxWoKsLI6jRvPoJdhZP9OwY8YHm/J0AK5Vp9rV7j59gMKa3LYDtAN1zCi4NTpDq7X9RGt4SQak127MwMkUhTBY+k/nkdoG0IHxeOyeaaK1dwN6UEYywPtpek1Qwy3taZa5AaojDIa1UcAh3uf5gDUR7XNIN27SavW5+42mX2Tl0Y83pSxxsJxqr9HH2LcPaHinrfNI+vHBsfl1aBYEI4jJxM7i2oPsnLjkiaXBnyScD7oQeoZXmgHtTI0pmeS7GBpY4JgQkCz25GmVRqJ2+r82XP+XqmWZm7FosCyEqlNF33SU/jWPUVj+x4rQyv14qnFiUNRz7f44QQKzjaFmpfViJmHMMxBdgzqWNkmv+vuMxWdnlczYShQ18C546b70EBlEA1Y+MKH2j4wmrWPGnCTwfRMIDg5cQGOqcBLlMCQR98w0Lxmjs13Zn+SbqOG8eUwwIRKthdRB2XLd1TGkoIRmj9eIbY38gwG3dCS4bIdN19W2p+E30hw42l1G/uMt1vG0VdpzE/LvMWAPGCm5JtWYUGlmApCy8C6axhrxzkwGlwCLdoxfIa041x9PjKR79CySV4Wqhw4+/jyZH4D8qpvLqJdog3Yn+a6c2nDYEF3gphZHwk1AFnDLurrxSVxFS5q0E="

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'push' || github.event.inputs.action == 'plan' || github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve -input=false
