name: Deploy EC2 Instance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VERSION: 1.5.0

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'kjchandan/Backstage-web-Java-code'

    - uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      continue-on-error: true

  Code-linting:
    needs: gitleaks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'kjchandan/Backstage-web-Java-code'

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '11'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.2

    - name: code linting
      run: |
        mvn validate || true
        mvn checkstyle:check || true
        mvn pmd:check || true

  terraform:
    needs: Code-linting
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: "ASIA3J5HVWH5H7OGY5VC"
        aws-secret-access-key: "j+E0w/yjDiU13mFMPWvZTMh4kHlnGP4CksUzh7O3"
        aws-region: 'us-east-1'
        aws-session-token: "IQoJb3JpZ2luX2VjEIX//////////wEaCXVzLWVhc3QtMSJHMEUCIQCVr+UGYbxvuGDcbsqK6edFV7czggE5gnAJyesCvkFfkwIgEW/tF9onlQ14l890enWHLeAU6qAW5YzPDhPayEl6IW8qxwMIzv//////////ARAAGgw3NzcyMDM4NTU4NjYiDOzA7esySAe9cvWO7iqbAzRTkebzDSDCeIQx+gzoC1tGXjPEwut0e1YeAX5lOFaHcWK1yGtLq9BmdC5/Wk4VMqIYNQArP70W2YGv9939o5k9bXLcrasfYBRc/d5vFjBRjbo6m1slpQ7y+ColPcPIZ2mA9qQUthZtAfrnycob/I0EYb+iwOmi5doyaCFOYv/Mgo4EuVM4VO3TSe4Dx/hGtOwo8UjmA20TKwJ0s9poXODx9KLuqzrbBSBhtcvhVrvzjQzUiboJIZj+agCzxDu4wOBTBmefdDn6qqMTmxOJBEKGnJTBYgW+Tm6It+ELyckRqIildV3W57U3jVBh5/WMz5MxsupJ/zbePxc5mjWJio/FRB78fIytbtcPsCH64c6o/ll8EPeBHVdmFipI3OwfCOyzCz4QGXHuWzaKUaoQxMQ7Kwg38jyyGEWN/fUsDblDf4ZwEBOz8kft1+N/EZz6sP9jVpfCp+lRHPp13ZteqDwnxHIbPQqIpQo2EIwtyEpF+zdfrri1bMIIB9Uh77fE8UoQj8sA20s8PE5+NNyXQirTROyM49F5t0B4MzCmnJXFBjqmAaQLG9Tt80BKijX6HOMtUcKZhugtZukPJfiguIzADWp3a7ZKEz7fgTxwfADre9Q2FvX2JnErcxH1tm0ZHQlsM0msl+TPAyoGl4l0ykemEPW5+LmcCKYEqN7I9lKNobc0Xq0edRAYPyxKAhMUs0aJsb5MBNm/f2rJpXBqzFU1bFHpaRlOMDRCllzBcUYX+nMCDpSQbM86V25KHLMu1pW/Jf3kUSlEO/8="

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'push' || github.event.inputs.action == 'plan' || github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve -input=false
