name: Deploy EC2 Instance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VERSION: 1.5.0

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'harihar3/backstage-service-example'

    - uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      continue-on-error: true

  Code-linting:
    needs: gitleaks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        repository: 'harihar3/backstage-service-example'

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '11'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.2

    - name: code linting
      run: |
        mvn validate || true
        mvn checkstyle:check || true
        mvn pmd:check || true

  terraform:
    needs: Code-linting
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ASIA3J5HVWH5NNMMTCP5
        aws-secret-access-key: 4h+q7SGmhEOvDmabT1oMpwKVaCj94vSTgX/XkiII
        aws-region: 'us-east-1'
        aws-session-token: IQoJb3JpZ2luX2VjEKD//////////wEaCXVzLWVhc3QtMSJHMEUCIHd0sVODEnDa45wABXYZ3OWx6d/46urQuM9jkVKebge1AiEA+Sgl61LSe0AD5zp2BrxeWh4oi9Ajp4XuxFAmAEIxNPQq0wMI2f//////////ARAAGgw3NzcyMDM4NTU4NjYiDEdQSZ2grucArOtGjCqnA6AO5EgtE/sZM/2IgdKOUebKyKg/XQtg16wyJRhpTIMXc2M7Rca0B7aQkggq1bwEQ5ZGcPK6JEWRS/PVizzl82WtEiQcL/BNmXFfHqtz0TsgIQWJBGRsRxk2L/lI3koCfJqwL9+TYoPpPE3cLVrTxe2pkcXL6F2AVyO/xl6CGxWgmT4ehi68IaTzcA/B8cKge7P22JM6kBK15sQxI0jbxSoWUzTEV4J5kfRIMeAt15mjMdl5ugft4lUXu6XsKvcufJ7vmVD7MXB2UTY39ZRExrRsB6IneOzBZViQnm7wiGxsKm5D9QP97rkWmwazA9L2pMu60zlPu2GxbYwbv/FyzIeQG+OBWe0cssM1TwQg3IDokLz0va/BXlD5r2ZLVttfOVQ0TBNj6+8KY2ORUR7GI/qaQNtA3Jv4dxg/VMIQ5wZ8xs+wX0ub4T4h4M0G+fffKmIyTwMTjtwSBm7Qzg8a0QDTv27HH9i7OcOQRwvWVQopEMmGLGXk9VxtNZ8rTsxLxiFhxb7H/fJk82tEJLZ/2DrkntJ1LhIBn+sdBs4aBa1IrCrB1/l8mTDL9uLEBjqmARaYbKsfb95J32ObOog6vfhkEOvWGyksirFsxblQVq3vMnxehDOiqgSW+bBogoNUg+HE8C1apbT1TlnIQi5QzUjKvxC0jhRkHGyMRKt07R832hS7NJVEA3FDVip4+OrWFOeXXi9Zm7mZya0puRUO+cIy9UQ+F8G6jZattuSNXdeGrpBrOelddyQ1+e8QLuWJmU0DeDmk0GaLfyO51UNFRJMzdy9rmqc=

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'push' || github.event.inputs.action == 'plan' || github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event.inputs.action == 'apply'
      run: terraform apply -auto-approve -input=false

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -auto-approve -input=false
